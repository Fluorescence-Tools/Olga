stages:
  - compile
  - package

build-ubuntu16.04:
  stage: compile
  image: burningdaylight/docker-ubuntu16.04-devel
  script:
    - mkdir -p ${CI_BUILD_NAME}
    - rm -f ${CI_BUILD_NAME}/gui/Olga build-ubuntu16.04/gui/main.o
    - find ${CI_BUILD_NAME} -name "Makefile*" -delete
    - cd ${CI_BUILD_NAME}; qmake ..; make -j8
  cache:
    paths:
    - ${CI_BUILD_NAME}/
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_BUILD_NAME}/gui/Olga
      - ${CI_BUILD_NAME}/irmsd/libirmsd.so

build-win64:
  stage: compile
  image: burningdaylight/docker-mingw-qt5
  script:
    - mkdir -p ${CI_BUILD_NAME}
    - rm -f ${CI_BUILD_NAME}/gui/release/Olga.exe build-win64/gui/release/main.o
    - find ${CI_BUILD_NAME} -name "Makefile*" -delete
    - cd ${CI_BUILD_NAME}; x86_64-w64-mingw32-qmake-qt5 ..; make -j8
  cache:
    paths:
    - ${CI_BUILD_NAME}/
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_BUILD_NAME}/gui/release/Olga.exe
      - ${CI_BUILD_NAME}/irmsd/release/irmsd.dll


build-win32:
  stage: compile
  image: burningdaylight/docker-mingw-qt5
  script:
    - mkdir -p ${CI_BUILD_NAME}
    - rm -f ${CI_BUILD_NAME}/gui/release/Olga.exe build-win32/gui/release/main.o;
    - find ${CI_BUILD_NAME} -name "Makefile*" -delete
    - cd ${CI_BUILD_NAME}; i686-w64-mingw32-qmake-qt5 ..; make -j8
  cache:
    paths:
    - ${CI_BUILD_NAME}/
  artifacts:
    expire_in: 1 day
    paths:
      - ${CI_BUILD_NAME}/gui/release/Olga.exe
      - ${CI_BUILD_NAME}/irmsd/release/irmsd.dll

pack-win64:
  stage: package
  image: burningdaylight/docker-mingw-qt5
  script:
    - mkdir -p ./Olga/platforms/
    - mkdir -p ./Olga/imageformats/
    - cp build-win64/gui/release/Olga.exe ./Olga/
    - cp build-win64/irmsd/release/irmsd.dll ./Olga/
    - "cp /usr/x86_64-w64-mingw32/bin/lib{GLESv2,async++,bz2-1,freetype-6,\
	gcc_s_seh-1,glib-2.0-0,harfbuzz-0,iconv-2,intl-8,pcre-1,pcre16-0,png16-16,\
	pteros,pteros_analysis,stdc++-6,tng_io,winpthread-1,\
	boost_filesystem-mt,boost_system-mt,graphite2,gomp-1}.dll ./Olga/"
    - "cp /usr/x86_64-w64-mingw32/bin/{Qt5Core,Qt5Gui,Qt5Multimedia,Qt5Network,\
	Qt5Svg,Qt5Widgets,zlib1}.dll ./Olga/"
    - cp /usr/x86_64-w64-mingw32/lib/qt/plugins/platforms/qwindows.dll ./Olga/platforms/
    - "cp /usr/x86_64-w64-mingw32/lib/qt/plugins/imageformats/\
	{qsvg,qico,qtiff,qjpeg}.dll ./Olga/imageformats/"
    - cp ./*.json ./Olga/
    - cp -r ./examples ./Olga/
    - cp -r ./doc ./Olga/
  dependencies:
    - build-win64
  artifacts:
    name: "Olga_win64_${CI_BUILD_REF_NAME}-${CI_BUILD_REF:0:8}"
    expire_in: 1 week
    paths:
      - Olga

pack-win32:
  stage: package
  image: burningdaylight/docker-mingw-qt5
  script:
    - mkdir -p ./Olga/platforms/
    - mkdir -p ./Olga/imageformats/
    - cp build-win32/gui/release/Olga.exe ./Olga/
    - cp build-win32/irmsd/release/irmsd.dll ./Olga/
    - "cp /usr/i686-w64-mingw32/bin/lib{GLESv2,async++,bz2-1,freetype-6,\
	gcc_s_sjlj-1,glib-2.0-0,harfbuzz-0,iconv-2,intl-8,pcre-1,pcre16-0,\
	png16-16,pteros,pteros_analysis,stdc++-6,tng_io,winpthread-1,\
	boost_filesystem-mt,boost_system-mt,graphite2,gomp-1}.dll ./Olga/"
    - "cp /usr/i686-w64-mingw32/bin/{Qt5Core,Qt5Gui,Qt5Multimedia,Qt5Network,\
	Qt5Svg,Qt5Widgets,zlib1}.dll ./Olga/"
    - cp /usr/i686-w64-mingw32/lib/qt/plugins/platforms/qwindows.dll ./Olga/platforms/
    - "cp /usr/i686-w64-mingw32/lib/qt/plugins/imageformats/\
	{qsvg,qico,qtiff,qjpeg}.dll ./Olga/imageformats/"
    - cp ./*.json ./Olga/
    - cp -r ./examples ./Olga/
    - cp -r ./doc ./Olga/
  dependencies:
    - build-win32
  artifacts:
    expire_in: 1 week
    name: "Olga_win32_${CI_BUILD_REF_NAME}-${CI_BUILD_REF:0:8}"
    paths:
      - Olga

#test:
#  stage: test
#  script:
#    - ./runmytests.sh
